class Visitante:
    def __init__(self, nome, documento, relacao, data_autorizacao):
        self.nome = nome
        self.documento = documento
        self.relacao = relacao
        self.data_autorizacao = data_autorizacao

class Paciente:
    def __init__(self, nome):
        self.nome = nome
        self.limite_visitantes = None

class SistemaCadastroVisitantes:
    def __init__(self):
        self.visitantes_autorizados = []
        self.registro_entradas_saidas = {}
        self.pacientes = []

    def cadastrar_visitante(self, nome, documento, relacao, data_autorizacao):
        visitante = Visitante(nome, documento, relacao, data_autorizacao)
        self.visitantes_autorizados.append(visitante)

    def verificar_autorizacao(self, nome):
        for visitante in self.visitantes_autorizados:
            if visitante.nome == nome:
                return True
        return False

    def listar_visitantes(self):
        if self.visitantes_autorizados:
            print("Visitantes cadastrados:")
            for visitante in self.visitantes_autorizados:
                print(visitante.nome)
        else:
            print("Não há visitantes cadastrados.")

    def registrar_entrada_saida(self, visitante, entrada=True):
        status = "entrada" if entrada else "saída"
        if visitante in self.visitantes_autorizados:
            if visitante not in self.registro_entradas_saidas:
                self.registro_entradas_saidas[visitante] = []
            self.registro_entradas_saidas[visitante].append(status)
            print(f"Registro de {status} para {visitante.nome}")
        else:
            print(f"{visitante.nome} não está autorizado.")

    def cadastrar_paciente(self, nome):
        paciente = Paciente(nome)
        self.pacientes.append(paciente)

    def definir_limite_visitantes(self, paciente_nome, limite):
        for paciente in self.pacientes:
            if paciente.nome == paciente_nome:
                paciente.limite_visitantes = limite
                print(f"Limite de {limite} visitantes definido para o paciente {paciente_nome}")
                return
        print(f"Paciente {paciente_nome} não encontrado.")

    def aplicar_restricoes_acesso(self, paciente, situacao_especial):
        print(f"Restrições aplicadas para o paciente {paciente} em situação especial: {situacao_especial}")

    def notificar_visitas_pendentes(self):
        visitantes_sem_autorizacao = [visitante.nome for visitante in self.visitantes_autorizados if visitante.nome not in self.registro_entradas_saidas]
        visitantes_sem_saida = [visitante.nome for visitante in self.visitantes_autorizados if visitante.nome in self.registro_entradas_saidas and 'entrada' in self.registro_entradas_saidas[visitante]]
        
        if visitantes_sem_autorizacao:
            print(f"Visitantes sem autorização para entrar: {', '.join(visitantes_sem_autorizacao)}")
        else:
            print("Todos os visitantes têm autorização para entrar.")

        if visitantes_sem_saida:
            print(f"Visitantes que ainda não registraram saída: {', '.join(visitantes_sem_saida)}")
        else:
            print("Todos os visitantes registraram saída.")

# Função para exibir o menu
def exibir_menu():
    print("\nMenu:")
    print("1. Cadastrar visitante")
    print("2. Verificar autorização")
    print("3. Listar visitantes cadastrados")
    print("4. Registrar entrada/saída")
    print("5. Cadastrar paciente")
    print("6. Definir limite de visitantes por paciente")
    print("7. Aplicar restrições de acesso")
    print("8. Notificar visitas pendentes")
    print("0. Sair")

# Loop para interagir com o sistema
sistema = SistemaCadastroVisitantes()

while True:
    exibir_menu()
    escolha = input("Escolha uma opção: ")

    if escolha == "1":
        nome = input("Nome do visitante: ")
        documento = input("Documento de identificação: ")
        relacao = input("Relação com o paciente: ")
        data_autorizacao = input("Data de autorização: ")
        sistema.cadastrar_visitante(nome, documento, relacao, data_autorizacao)

    elif escolha == "2":
        sistema.listar_visitantes()
        nome = input("Digite o nome do visitante: ")
        autorizado = sistema.verificar_autorizacao(nome)
        if autorizado:
            print("Visitante autorizado.")
        else:
            print("Visitante não autorizado.")

    elif escolha == "3":
        sistema.listar_visitantes()

    elif escolha == "4":
        sistema.listar_visitantes()
        nome_visitante = input("Digite o nome do visitante: ")
        visitante = None

        for v in sistema.visitantes_autorizados:
            if v.nome == nome_visitante:
                visitante = v
                break

        if visitante:
            entrada = input("Registro de entrada (s/n): ").lower() == "s"
            sistema.registrar_entrada_saida(visitante, entrada)
        else:
            print(f"{nome_visitante} não está cadastrado como visitante.")

    elif escolha == "5":
        nome_paciente = input("Nome do paciente: ")
        sistema.cadastrar_paciente(nome_paciente)

    elif escolha == "6":
        paciente_nome = input("Nome do paciente: ")
        limite = int(input("Limite de visitantes: "))
        sistema.definir_limite_visitantes(paciente_nome, limite)

    elif escolha == "7":
        paciente = input("Nome do paciente: ")
        situacao_especial = input("Situação especial: ")
        sistema.aplicar_restricoes_acesso(paciente, situacao_especial)

    elif escolha == "8":
        sistema.notificar_visitas_pendentes()

    elif escolha == "0":
        break

    else:
        print("Opção inválida. Tente novamente.")
